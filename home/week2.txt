1. Constructor(default - no args and overloaded)
   overloading -> same name, but various args



   Encapsulation(private, public, package-private)

   Inheritance -> is-a -> super -> overriding

   Abstraction -> Parent p = new Child(); -> instanceof operator

   Polymorphism -> overriding


   Debug mode in Intellij
       Breakpoints
       Step Over, Step In, Step Out, Resume

   Class and Relations(has-a and is-a)

   Formatter -> String.format, System.out.printf
    class Date

    super class Object
    methods: toString and equals
    difference between 'equals' and '=='

    If you want share your homework via git -> https://www.youtube.com/watch?v=R6JomxUjTq8&feature=youtu.be

2. Доработать класс студент, реализовать методы equals, toString, compareTo.
   Организовать методы в классе Group таким образом, что бы они внутри себя использовали метод equals класса Student.
   (Student search(String name) -> Student search(Student student) и т.д. и т.п.)

   Написать несколько разных реализаций интерфейса Comparator, на основе которых можно в классе Arrays отсортировать массив студентов.
   Перегрузит метод sort в классе Group, что бы он мог принимать Comparator

   Вместо масива студентов в крупе иеперь должен находиться ArrayList студентов.

3. Write your own ArrayList!
 First look the structure and methods of Java ArrayList!!!

 implement different constructors

 implement methods:

 * add(Object)
 * add(index, Object)
 * get(index)
 * remove(index)
 * remove(index, Object)
 * set(index, Object)
 * clear()
 * contains(Object)
 * size()

4. Предметная область - программа Библиотека v. 1.0

 Вам пришел заказ от библиотеки, которая стала на путь истинный и решила создать електронную картотеку книг и читателей.
 Ваша задача создать программу, которая будет исполнять определенные задачи перечисленные ниже.
 Заказчик хочет сделать все в кратчайшие сроки и просит Вас к выходным уже предоставить тестовую версию программы.

    Основные классы: Библиотека, Печатные издания(наследование), Читатель, и другие, которые вы создадите по мере надобности.

    Написать программу позволяющую узнать следующую информацию:
      1) посмотреть список читателей
      2) посмотреть список доступных конкретных печатных изданий
      3) добавить печатное издание в библиотеку
      4) добавить читателя в список читателей
      5) выдать печатное издание читателю (если книга есть в наличии).
         Читателю запрещается брать больше 3-х печатных изданий(либо другого количества печатных изданий).
      6) посмотреть список печатных изданий, которые находятся у читателей
      7) посмотреть список печатных изданий, которые находятся у конкретного читателя
      8) добавить читателя в черный список (ему нельзя выдавать печатные издания)
      9) посмотреть печатные издания конкретного автора
      10) посмотреть печатные издания конкретного автора
      11) посмотреть печатные издания конкретного года
      12) найти печатное издание по названию (ключевым словам)

 	  * пункты 1, 2, 6, 7, 9, 10, 11, 12 выводить в отсортированом виде

 	  ** задание будет изменяться, по этому ваша программа долна обладать определенной гибкостью
